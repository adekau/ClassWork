#include "apue.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <assert.h>
#include <sys/types.h>
#include <fcntl.h>

int readLine(int fd, int start, char * line);

int main(int argc, char* argv[]) {
  struct country {
    char   code[4];
    char   name[50];
    long   pop;
    double lexp;
  };

  struct country countries[239];

  int    fd;
  char * mode = "r";
  char * line = malloc(1000 * sizeof(char));
  char * token;
  char * leftover;
  int    curtok;
  int    bufStart = 0;
  char   codeToSearch[4];
  
  if(argc != 2) {
    printf("Usage: %s [country code OR all]\n", argv[0]);
  }else{
    if(strlen(argv[1]) != 3) {
      printf("country code must be 3 characters long.\n");
      return 0;
    }else{
      strcpy(codeToSearch, argv[1]);
    }
  }

  fd = open("AllCountries.dat", O_RDONLY);
  if(fd < 0) {
    err_sys("Error opening file.\n");
  }

  int i;
  for(i = 0; i < 239; i++) {
    curtok = 0;
    bufStart = readLine(fd, bufStart, line); 
    leftover = line;
    while((token = strtok_r(leftover, ",", &leftover))) {
      if(curtok == 1) {
	strcpy(countries[i].code, token);
      }else if(curtok == 2) {
	strcpy(countries[i].name, token);
      }else if(curtok == 7) {
	countries[i].pop  = atoi(token);
      }else if(curtok == 8) {
	countries[i].lexp = atof(token);
      }
      curtok++;
    }
  }

  if(strncmp("all", codeToSearch, 3) == 0) {
    for(i = 0; i < 239; i++) {
      printf("Code: %s, Name: %s, Population: %ld, Life Expectancy: %.2f\n", countries[i].code, countries[i].name, countries[i].pop, countries[i].lexp);

    }
  }else{
    for(i = 0; i < 239; i++) {
      if(strncmp(countries[i].code, codeToSearch, 3) == 0) {
        printf("Code: %s, Name: %s, Population: %ld, Life Expectancy: %.2f\n", countries[i].code, countries[i].name, countries[i].pop, countries[i].lexp);
        break;
      }else{
        if(i == 238 && argc == 2) printf("Country not found.\n");
      }
    }
  }

  if(close(fd) < 0) {
    err_sys("Failed to close file.\n");
  }
}
